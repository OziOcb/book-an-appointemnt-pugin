@import "fonts";
@import "vendor/bootstrap/_custom";
@import "vendor/bootstrap/bootstrap.scss";

/* BASE */
@import "base/_palette";
@import "base/_breakpoints";
@import "base/_base";
@import "base/_typography";

/* TABS' BADGES */
.bfd-tab {
	&__icon {
		color: $color-primary;
	}
	&__badge {
		background-color: $color-primary;
		color: $color-white;
	}
	&.disabled .bfd-tab {
		&__icon {
			color: darken(palette("light"), 40%);
		}
		&__badge {
			background-color: palette("light");
			color: $color-text;
		}
	}
	&.active .bfd-tab {
		&__icon {
			color: palette("warning");
		}
		&__badge {
			background-color: palette("warning");
		}
	}
}

/* ADD A RED CROSS TO EACH INPUT FOR VALIDATION PURPOSE */
.bfd-textInput {
	position: relative;
	&::after {
		content: '\f00d';
		font-family: FontAwesome;
		font-size: 22px;
		color: #ec2626;
		filter: drop-shadow(0 0 0.2rem rgba(255, 0, 0, 0.15));
		display: inline-block;
    font-style: normal;
    font-variant: normal;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
		position: absolute;
		right: 40px;
		transform: scale(.4) rotate(15deg);
		opacity: 0;
		transition: opacity 0.3s ease, transform 0.3s cubic-bezier(0.25, 0.1, 0.49, 3.18)
	}
	&.invalid::after {
		transform: scale(1) rotate(0deg);
		opacity: 1;
	}
}

/* ADD FANCY CHECKBOX & RADIO BUTTONS */
// Real Checkbox/radioBtn
.bfd-checkbox,
.bfd-radioBtn {
	input[type="checkbox"],
	input[type="radio"] {
		opacity: 0;
	}
}

// Fake Checkbox/radioBtn
.bfd-checkbox,
.bfd-radioBtn {
	padding: 10px 5px;
	label {
		position: relative;
		padding-left: 30px;
		display: block;

		&::before,
		&::after {
			content: "";
			position: absolute;
		}
		// Outer box of the fake checkbox/radioBtn
		&::before {
			height: 21px;
			width: 21px;
			border: 1px solid #aaa;
			border-radius: 3px;
			left: 0px;
			top: 3px;
		}
	}
	input[type="checkbox"],
	input[type="radio"] {
		&:checked + label::before {
			border-color: $color-primary;
			animation: wobble 0.3s ease;
		}
		// Adding focus styles on the outer-box of the fake checkbox/radioBtn
		&:focus + label::before {
			box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
		}
	}
	// Checkmark of the fake checkbox/radioBtn
	label::after {
		opacity: 0;
		height: 10px;
		width: 27px;
		border-left: 4px solid $color-primary;
		border-bottom: 4px solid $color-primary;
		transform: scale(0.5) rotate(-45deg);
		left: 3px;
		top: 2px;
		transition: opacity 0.3s ease, transform 0.3s cubic-bezier(0.25, 0.1, 0.49, 3.18);
	}
	// Unhide on the checked state
	input[type="checkbox"]:checked,
	input[type="radio"]:checked {
		+ label::after {
			opacity: 1;
			transform: scale(1) rotate(-45deg);
		}
	}
}

// Make radioBtn rounded
.bfd-radioBtn label::before {
	border-radius: 50%;
}

/* HOUR PACKAGES */
// Needed to be used with .bfd-radioBtn class
.bfd-hourPackage {
	label {
		padding: 1.5em 20px 1.5em 60px;
		border: 1px solid transparent;
		border-radius: 5px;
		transition: border-color 0.3s ease;

		&::before {
			left: 20px;
			top: 30px;
		}
		&::after {
			left: 22px;
			top: 29px;
		}
	}

	input[type="radio"] {
		&:checked + label {
			border-color: $color-primary;
		}
		&:focus + label {
			box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
		}
	}
}

/* VALIDATION */
// Input validation (highlighting while invalid)
.bfd-textInput.invalid .form-control,
.bfd-checkbox.invalid input[type="checkbox"] + label::before {
	border: 1px solid #ec2626;
	box-shadow: 0 0 0 0.2rem rgba(255, 0, 0, 0.25);
	transition: box-shadow 0.4s ease-in-out;
	animation: shaking 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}

/* OTHER */
// Change text color of input placeholders
input[type="text"],
input[type="email"],
input[type="number"] {
	&::placeholder {
		color: #ccc;
	}
}

/* ANIMATIONS */
@keyframes wobble {
	0% {
		transform: scale(1) rotate(0deg);
	}
	40% {
		transform: scale(1.1, 0.9) rotate(5deg);
	}
	70% {
		transform: scale(0.9, 1.1) rotate(-3deg);
	}
	80% {
		transform: scale(1.05, 0.95) rotate(1deg);
	}
	to {
		transform: scale(1) rotate(0deg);
	}
}

@keyframes shaking {
	10%,
	90% {
		transform: translate3d(-2px, 0, 0);
	}
	20%,
	80% {
		transform: translate3d(4px, 0, 0);
	}
	30%,
	50%,
	70% {
		transform: translate3d(-8px, 0, 0);
	}
	40%,
	60% {
		transform: translate3d(8px, 0, 0);
	}
}
